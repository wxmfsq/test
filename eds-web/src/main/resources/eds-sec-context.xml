<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
		<beans:property name="hideUserNotFoundExceptions"
			value="false"></beans:property>
		<beans:property name="passwordEncoder" ref="md5PasswordEncoder" />
	</beans:bean>

    <beans:bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<beans:bean id="userDetailsService" class="com.founder.eds.web.security.UserDetailsServiceImpl" />

	<beans:bean id="springSecurityFilterChain"
		class="org.springframework.security.web.FilterChainProxy">
		<filter-chain-map path-type="ant">
			<filter-chain pattern="/scripts/**/*" filters="none" />
			<filter-chain pattern="/styles/**/*" filters="none" />
			<filter-chain pattern="/images/**/*" filters="none" />
			<filter-chain pattern="/**/favicon.ico" filters="none" />
			<filter-chain pattern="/**/login.html" filters="none" />
			<filter-chain pattern="/**"
				filters="securityContextPersistenceFilterWithASCTrue,
					logoutFilter,
					formLoginFilter,
					sessionManagementFilter,
					exceptionTranslationFilter,
					filterSecurityInterceptor" />
		</filter-chain-map>
	</beans:bean>

	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg name="logoutSuccessUrl"
			value="/login.html" />
		<beans:constructor-arg name="handlers">
			<beans:array>
				<beans:ref local="logoutHandler" />
			</beans:array>
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="logoutHandler" class="com.founder.eds.web.security.LogoutHandlerImpl">
	</beans:bean>

	<beans:bean id="anonymousAuthFilter"
		class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<beans:property name="key" value="foobar" />
		<beans:property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</beans:bean>

	<beans:bean id="securityContextRepositoryWithASCTrue"
		class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
		<beans:property name="allowSessionCreation" value="true" />
	</beans:bean>

	<beans:bean id="securityContextPersistenceFilterWithASCTrue"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<beans:property name="securityContextRepository"
			ref="securityContextRepositoryWithASCTrue" />
		<beans:property name="forceEagerSessionCreation" value="true" />
	</beans:bean>

	<beans:bean id="formLoginFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationFailureHandler"
			ref="simpleUrlAuthenticationFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="simpleUrlAuthenticationSuccessHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
	</beans:bean>

	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.html?status=error" />
	</beans:bean>

	<beans:bean id="simpleUrlAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl"
			value="/externalDataServe/externalDataServeList.html" />
	</beans:bean>

	<beans:bean id="exceptionMappingAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" />

    <beans:bean id="securityMetadataSource" class="com.founder.eds.web.security.DatabaseFilterInvocationSecurityMetadataSource" />

	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter" />

	<beans:bean id="authenticatedVoter"
		class="org.springframework.security.access.vote.AuthenticatedVoter" />

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref local="roleVoter" />
				<beans:ref local="authenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="defaultLoginPageGeneratingFilter"
		class="org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter">
		<beans:constructor-arg name="filter" ref="formLoginFilter" />
	</beans:bean>

	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource">
		</beans:property>
	</beans:bean>

	<beans:bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
		<beans:property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</beans:bean>

	<beans:bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.html" />
	</beans:bean>

	<beans:bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/403.jsp" />
	</beans:bean>

	<beans:bean id="sessionManagementFilter"
		class="org.springframework.security.web.session.SessionManagementFilter">
		<beans:constructor-arg name="securityContextRepository"
			ref="securityContextRepositoryWithASCTrue" />
	</beans:bean>
</beans:beans>